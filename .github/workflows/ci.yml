name: CI - Security Checks

on:
  push:
  pull_request:

jobs:
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep (custom rule)
        uses: returntocorp/semgrep-action@v1
        with:
          config: semgrep/semgrep.yml

  # (Optional) Run simple Python tests for a more professional pipeline
  tests:
    runs-on: ubuntu-latest
    needs: semgrep   # Run Semgrep first, then tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Currently no extra dependencies; add here if needed
          echo "no extra deps"
      
      - name: Run tests
        run: |
          python -m tests.test_app

  build_keys:
    runs-on: ubuntu-latest
    needs: [semgrep, tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write private keys from Actions Secrets
        run: |
          set -euo pipefail
          mkdir -p keys
          # Alfred
          printf '%s\n' "${{ secrets.ALFREDS_PRIVATE_KEY_PEM }}" > keys/Alfreds-private-key.pem
          chmod 600 keys/Alfreds-private-key.pem
          # Marina
          printf '%s\n' "${{ secrets.MARINA_PRIVATE_KEY_PEM }}" > keys/Marina-private-key.pem
          chmod 600 keys/Marina-private-key.pem
          # Christina
          printf '%s\n' "${{ secrets.CHRISTINA_PRIVATE_KEY_PEM }}" > keys/Christina-private-key.pem
          chmod 600 keys/Christina-private-key.pem

      - name: Use the keys (example)
        run: |
          set -euo pipefail  
          ls -l keys

      - name: Secure cleanup (remove keys after use)
        if: always()
        run: |
          set -euo pipefail
          shred -u keys/* || true
          rmdir keys || true

  trufflehog_filesystem:
    runs-on: ubuntu-latest
    needs: [semgrep, tests]
    steps:
      - name: Checkout repository (working tree)
        uses: actions/checkout@v4
      - name: Run TruffleHog (filesystem)
        run: |
          set -euo pipefail
          docker run --rm \
            -v ${{ github.workspace }}:/repo \
            -v ${{ github.workspace}}/trufflehog_exclude_paths.txt:/trufflehog_exclude_paths.txt \
            ghcr.io/trufflesecurity/trufflehog:latest \
            filesystem /repo \
            --exclude-paths=/trufflehog_exclude_paths.txt \
            --results=verified,unverified,unknown \
            --fail
          
  trufflehog_git:
    runs-on: ubuntu-latest
    needs: [semgrep, tests]
    steps:
      - name: Checkout repository (full history for git scan)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine branch name
        run: |
          echo "BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}" >> $GITHUB_ENV
          echo "Branch to scan: ${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"    

      - name: Compute merge-base for PR
        if: github.event_name == 'pull_request'
        run: |
          set -euo pipefail
          git fetch origin "${{ github.base_ref }}:${{ github.base_ref }}"
          BASE_SHA="$(git merge-base origin/${{ github.base_ref }} HEAD)"
          echo "BASE_SHA=$BASE_SHA" >> $GITHUB_ENV
          echo "Scanning since: $BASE_SHA"

      - name: Run TruffleHog (git history - PR diff only)
        if: github.event_name == 'pull_request'
        run: |
          set -euo pipefail
          docker run --rm \
          -v ${{ github.workspace }}:/repo \
          ghcr.io/trufflesecurity/trufflehog:latest \
          git file:///repo \
          --branch "${BRANCH}" \
          --since-commit "${BASE_SHA}" \
          --results=verified,unverified,unknown \
          --fail

      - name: Run TruffleHog (git history - since previous push)
        if: github.event_name == 'push'
        run: |
          set -euo pipefail
          PREV="${{ github.event.before }}"
          docker run --rm \
            -v ${{ github.workspace }}:/repo \
            ghcr.io/trufflesecurity/trufflehog:latest \
            git file:///repo \
            --branch "${BRANCH}" \
            --since-commit "${PREV}" \
            --results=verified,unverified,unknown \
            --fail